name: Build

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  GO_BUILD_IMAGE: golang:1.22.3
  NETWORK_TARGET_MAINNET: mainnet
  NETWORK_TARGET_CALIBNET: calibnet

jobs:
  build:
    name: Containers
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        if: ${{ github.event_name != 'pull_request' }}
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for calibnet
        id: meta-for-calibnet
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
          tags: |
            type=semver,pattern={{raw}},prefix=calibnet-
            type=semver,pattern={{major}}.{{minor}},prefix=calibnet-
            type=semver,pattern={{major}},prefix=calibnet-
            type=ref,event=branch,prefix=calibnet-

      - name: Build and push Docker for calibnet
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-for-calibnet.outputs.tags }}
          labels: ${{ steps.meta-for-calibnet.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            GO_BUILD_IMAGE=${{ env.GO_BUILD_IMAGE }}
            NETWORK_TARGET=${{ env.NETWORK_TARGET_CALIBNET }}

      - name: Extract metadata for mainnet
        id: meta-for-mainnet
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=true
          tags: |
            type=semver,pattern={{raw}},prefix=mainnet-
            type=semver,pattern={{major}}.{{minor}},prefix=mainnet-
            type=semver,pattern={{major}},prefix=mainnet-
            type=ref,event=branch,prefix=mainnet-

      - name: Build and push Docker for mainnet
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-for-mainnet.outputs.tags }}
          labels: ${{ steps.meta-for-mainnet.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            GO_BUILD_IMAGE=${{ env.GO_BUILD_IMAGE }}
            NETWORK_TARGET=${{ env.NETWORK_TARGET_MAINNET }}
